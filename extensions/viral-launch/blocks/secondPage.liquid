<script>
  let second_page_settings = {{ block.settings | json }};

  async function getbackground(campaign_name) {
    return await fetch('/apps/xychrosupdated/api/geturl', {
      method: 'POST',
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify(
        {campaign_name: campaign_name}
      )
    }).then(function(response) {
      return response.json();
    });
  }

    // count user clicks
  async function getClicks(campaign_name) {
    try {
      console.log('Get Landing Page Clicks of: ', campaign_name);
      const response = await fetch("/apps/xychrosupdated/api/getclicks",
      {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          campaign_name: campaign_name,
        }),
      }
    );
    const data = await response.json();
    } catch(err){
      console.log(err);
    }
  }

  window.onload = async (e) => {
    var el = document.querySelector('.product-prelaunch-second-page');
    el.parentElement.style.padding = '0';
    el.parentElement.style.margin = '0';
    if (second_page_settings.show_header_footer == false) {
      var node,
        nodes = [];

      do {
        var parent = el.parentNode;

        // Collect element children
        for (var i = 0, iLen = parent.childNodes.length; i < iLen; i++) {
          node = parent.childNodes[i];

          // Collect only sibling nodes that are elements and not the current element
          if (node.nodeType == 1 && node != el) {
            nodes.push(node);
          }
        }

        // Go up to parent
        el = parent;

        // Stop when processed the body's child nodes
      } while (el.tagName.toLowerCase() != 'body');

      // Hide the collected nodes
      nodes.forEach(function(node) {
        node.style.display = 'none';
      });
    }

    const campaign = document.getElementById('review_campaign_name');
    const campaign_name = campaign.innerHTML;
    {% comment %} console.log(campaign_name); {% endcomment %}
    const myBackground = await getbackground(campaign_name);
    clicks = getClicks(campaign_name);
    {% comment %} console.log(clicks); {% endcomment %}

    if (second_page_settings.background_image) {
      let second_image_background = 'https:' + second_page_settings.background_image;
      console.log(second_image_background);
      document.getElementById('second-background-image').style.backgroundImage = second_page_settings.background_overlay + ',url(' + second_image_background + ')';
    } else {
      document.getElementById('second-background-image').style.backgroundImage = second_page_settings.background_overlay + ',url(' + myBackground.imageURL + ')';
    }

    {% comment %} custom scrollbar on input field {% endcomment %}
    const scrollContainer = document.querySelector('.scroll-container');
    const scrollThumb = document.querySelector('.scroll-thumb');
    const referralLinkInput = document.querySelector('.referral-link-inp');

    let isDragging = false;
    let startScrollX = 0;
    let startThumbX = 0;

    scrollThumb.addEventListener('mousedown', (e) => {
      isDragging = true;
      startScrollX = referralLinkInput.scrollLeft;
      startThumbX = e.clientX - scrollThumb.getBoundingClientRect().left;
    });

    scrollContainer.addEventListener('click', (e) => {
      const clickPosition = e.clientX - scrollContainer.getBoundingClientRect().left;
      const thumbPosition = clickPosition - scrollThumb.clientWidth / 2;
      const maxThumbX = scrollContainer.clientWidth - scrollThumb.clientWidth;

      const scrollX = (thumbPosition / maxThumbX) * (referralLinkInput.scrollWidth - scrollContainer.clientWidth);
      referralLinkInput.scrollLeft = scrollX;

      scrollThumb.style.left = `${Math.max(0, Math.min(thumbPosition, maxThumbX))}px`;
    });

    document.addEventListener('mousemove', (e) => {
      if (!isDragging) return;

      const thumbX = e.clientX - startThumbX - scrollContainer.getBoundingClientRect().left;
      const maxThumbX = scrollContainer.clientWidth - scrollThumb.clientWidth;
      const thumbPosition = Math.max(0, Math.min(thumbX, maxThumbX));

      const scrollX = (thumbPosition / maxThumbX) * (referralLinkInput.scrollWidth - scrollContainer.clientWidth);
      referralLinkInput.scrollLeft = scrollX;

      scrollThumb.style.left = `${thumbPosition}px`;
    });

    document.addEventListener('mouseup', () => {
      isDragging = false;
    });
  }
</script>

<style>
  .product-prelaunch-second-page {
    display: block !important;
    width: 100vw;
  }
  .rewards_preheader_text {
    color: {{ block.settings.accent_color }};
    font-size: {{ block.settings.base_font_size | times: 0.5 }}px;
    font-weight: 800;
    padding: 0 2%;
  }
  .rewards_header_text {
    color: {{ block.settings.accent_color }};
    font-size: {{ block.settings.base_font_size }}px;
    font-weight: 800;
    padding: 0 2%;
  }
  .rewards_subheader_text {
    color: {{ block.settings.accent_color }};
    font-size: {{ block.settings.base_font_size | times: 0.4 }}px;
    font-weight: 500;
    padding: 2% 2%;
  }
  .rewards-horizontal .rewards_subheader_text {
    padding: unset !important;
  }
  input[value] {
    color: {{ block.settings.main_color }};
  }
  .scroll-thumb {
    background-color: {{ block.settings.main_color }};
  }
  .copy-link-btn {
    border: 1px solid{{ block.settings.accent_color }};
    background-color: {{ block.settings.main_color }};
    color: {{ block.settings.accent_color }};
  }
  .rewards-img-layout {
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    {% if block.settings.text_layout == 'left' %}
      text-align: left;
    {% elsif block.settings.text_layout == 'right' %}
      text-align: right;
    {% else %}
      text-align: center;
    {% endif %}
  }
  .gift-layout {
    background-color: {{ block.settings.main_color }};
  }
  .friends-joined {
    color: {{ block.settings.accent_color }};
  }
  .timeline-headers {
    color: {{ block.settings.accent_color }};
  }
  .vertical-timeline-headers {
    color: {{ block.settings.accent_color }};
  }
  .reward-target {
    border: 1px solid{{ block.settings.accent_color }};
    background-color: {{ block.settings.main_color }};
    color: {{ block.settings.accent_color }};
  }
  .vertical-reward-target {
    border: 1px solid{{ block.settings.accent_color }};
    background-color: {{ block.settings.main_color }};
    color: {{ block.settings.accent_color }};
  }
  .referral-count-achieved {
    background-color: {{ block.settings.accent_color }};
    color: {{ block.settings.main_color }};
  }
  .vertical-referral-count-achieved {
    background-color: {{ block.settings.accent_color }};
    color: {{ block.settings.main_color }};
  }
  .reward-item-detail span {
    color: {{ block.settings.accent_color }};
  }
  .rewards_socials svg > path {
    fill: {{ block.settings.accent_color }} !important;
  }
  @media screen and (max-width: 767px) {
    .rewards_preheader_text {
      font-size: {{ block.settings.base_font_size | times: 0.36 }}px;
    }
    .rewards-horizontal .rewards_preheader_text {
      padding: 0% 2% 0% 2% !important;
    }
    .rewards_header_text {
      font-size: {{ block.settings.base_font_size | times: 0.5 }}px;
    }
    .rewards_subheader_text {
      font-size: {{ block.settings.base_font_size | times: 0.25 }}px;
    }
  }
  @media only screen and (min-width: 768px) and (max-width: 991px) {
    .rewards_preheader_text {
      font-size: {{ block.settings.base_font_size | times: 0.40 }}px;
    }
    .rewards_header_text {
      font-size: {{ block.settings.base_font_size | times: 0.75 }}px;
    }
    .rewards_subheader_text {
      font-size: {{ block.settings.base_font_size | times: 0.30 }}px;
    }
  }
  @media only screen and (min-width: 992px) and (max-width: 1199px) {
    .rewards_preheader_text {
      font-size: {{ block.settings.base_font_size | times: 0.45 }}px;
    }
    .rewards_header_text {
      font-size: {{ block.settings.base_font_size | times: 0.85 }}px;
    }
    .rewards_subheader_text {
      font-size: {{ block.settings.base_font_size | times: 0.35 }}px;
    }
  }
  @media only screen and (min-width: 1200px) {
    .rewards_preheader_text {
      font-size: {{ block.settings.base_font_size | times: 0.5 }}px;
    }
    .rewards_header_text {
      font-size: {{ block.settings.base_font_size }}px;
    }
    .rewards_subheader_text {
      font-size: {{ block.settings.base_font_size | times: 0.40 }}px;
    }
  }
</style>

{% render "second_page" %}

{% schema %}
  {
    "name": "PreLauncher Second Page",
    "target": "section",
    "templates": ["page"],
    "class": "product-prelaunch-second-page",
    "stylesheet": "second_page.css",
    "javascript": "second-page.js",
    "settings": [
      {
        "type": "checkbox",
        "id": "show_header_footer",
        "label": "Show Header & Footer",
        "default": true
      },
      {
        "label": "Campaign Name",
        "id": "campaign_name",
        "type": "text",
        "default": "MyCampaign"
      },
      {
        "type": "paragraph",
        "content": "Note: Do not change campaign name here as you have already named your campaign on merchants dashboard, updating it here would cause potential risks."
      },
      {
        "type": "color_background",
        "id": "background_overlay",
        "label": "Background Overlay",
        "default": "linear-gradient(137deg, rgba(0, 0, 0, 0) 100%, rgba(167, 144, 140, 0) 100%)"
      }, {
        "label": "Main Color",
        "id": "main_color",
        "type": "color",
        "default": "#000000"
      }, {
        "label": "Accent Color",
        "id": "accent_color",
        "type": "color",
        "default": "#ffffff"
      }, {
        "type": "select",
        "id": "layout",
        "label": "Screen Divider",
        "options": [
          {
            "value": "none-horizontal",
            "label": "None-Horizontal"
          }, {
            "value": "none-vertical",
            "label": "None-Vertical"
          }, {
            "value": "horizontal",
            "label": "Horizontal"
          }, {
            "value": "vertical",
            "label": "Vertical"
          }
        ],
        "default": "horizontal"
      }, {
        "label": "Background Image",
        "id": "background_image",
        "type": "image_picker"
      }, {
        "label": "Pre-Header",
        "id": "preheader_text",
        "type": "text",
        "default": "This is PreHeader Text"
      }, {
        "label": "Header",
        "id": "header_text",
        "type": "text",
        "default": "This is Header Text"
      }, {
        "label": "Sub Header",
        "id": "subheader_text",
        "type": "text",
        "default": "This is SubHeader Text"
      }, {
        "label": "Text Base Font Size",
        "id": "base_font_size",
        "type": "range",
        "min": 12,
        "max": 64,
        "step": 1,
        "unit": "px",
        "default": 24
      }, {
        "type": "select",
        "id": "text_layout",
        "label": "Text Layout",
        "options": [
          {
            "value": "center",
            "label": "Center"
          }, {
            "value": "left",
            "label": "Left"
          }, {
            "value": "right",
            "label": "Right"
          }
        ],
        "default": "center"
      }, {
        "label": "Select Referral Icon",
        "id": "icon_dropdown",
        "type": "select",
        "options": [
          {
            "value": "icon-1",
            "label": "Icon 1",
            "group": "Icon"
          },
          {
            "value": "icon-2",
            "label": "Icon 2",
            "group": "Icon"
          },
          {
            "value": "icon-3",
            "label": "Icon 3",
            "group": "Icon"
          },
          {
            "value": "icon-4",
            "label": "Icon 4",
            "group": "Icon"
          }, {
            "value": "icon-5",
            "label": "Icon 5",
            "group": "Icon"
          }, {
            "value": "icon-6",
            "label": "Icon 6",
            "group": "Icon"
          }, {
            "value": "icon-7",
            "label": "Icon 7",
            "group": "Icon"
          }, {
            "value": "image-1",
            "label": "Image 1",
            "group": "Image"
          }, {
            "value": "image-2",
            "label": "Image 2",
            "group": "Image"
          }, {
            "value": "image-3",
            "label": "Image 3",
            "group": "Image"
          }, {
            "value": "image-4",
            "label": "Image 4",
            "group": "Image"
          }, {
            "value": "image-5",
            "label": "Image 5",
            "group": "Image"
          }, {
            "value": "image-6",
            "label": "Image 6",
            "group": "Image"
          }, {
            "value": "image-7",
            "label": "Image 7",
            "group": "Image"
          }
        ],
        "default": "icon-1"
      }, {
        "type": "page",
        "id": "page",
        "label": "Link to Page"
      }
    ]
  }
{% endschema %}